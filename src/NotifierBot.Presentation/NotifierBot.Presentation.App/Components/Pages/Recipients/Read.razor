@page "/recipients/{id}"
@using NotifierBot.Infrastructure.Models.Api
@using NotifierBot.Infrastructure.Maintenance.Exceptions
@using System.Net
@using NotifierBot.Infrastructure.Models.Enums
@inject NotifierBot.Business.Services.DataManagement.IDataManagementFacade DataManager
@inject NavigationManager Nav

<PageTitle>Получатели</PageTitle>

<MudPaper Class="pa-4">
    <MudButton aria-label="back" Href="/recipients/list">
        <MudIcon Icon="@Icons.Material.Filled.ArrowBack"></MudIcon>
        &nbsp; &nbsp;
        Перейти к списку получателей
    </MudButton>
    <MudForm @ref="_form">
        <MudTextField T="long" Label="Идентификатор" Disabled @bind-Value="@_model.Id" For="@(() => _model.Id)"/>
        <MudTextField T="string" Label="Внешний идентификатор" @bind-Value="@_model.ExternalIdentifier" For="@(() => _model.ExternalIdentifier)"/>
        <MudTextField T="string" Label="Название" @bind-Value="@_model.Name" For="@(() => _model.Name)"/>
        <MudSelect T="RecipientType" Label="Тип" AnchorOrigin="Origin.BottomCenter" @bind-Value="@_model.Type" For="@(() => _model.Type)">
            @foreach (var item in Enum.GetValues<RecipientType>())
            {
                <MudSelectItem Value="@item"/>
            }
        </MudSelect>
        <MudTextField T="DateTime" Label="Дата создания" Disabled @bind-Value="@_model.Created" For="@(() => _model.Created)"/>
        <MudTextField T="DateTime" Label="Дата обновления" Disabled @bind-Value="@_model.Updated" For="@(() => _model.Updated)"/>
        <div class="d-flex align-center justify-space-between mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@SaveAsync">
                <MudIcon Icon="@Icons.Material.Filled.Save"></MudIcon>
                &nbsp; &nbsp;
                Сохранить
            </MudButton>
        </div>
    </MudForm>
</MudPaper>

@code {
    
    [Parameter]
    public string Id { get; set; } = default!;

    private Recipient _model = null!;
    private MudForm? _form;

    protected override async Task OnInitializedAsync()
    {
        if (!long.TryParse(Id, out var id))
        {
            throw new ErrorException(HttpStatusCode.NotFound, $"Не найдена сущность с идентификатором #{Id}");
        }

        if (id != 0)
        {
            _model = (await DataManager.Recipients.ReadAsync(id, CancellationToken.None))!;
        }
        else
        {
            _model = new();
        }

        await base.OnInitializedAsync();
    }

    private async Task SaveAsync()
    {
        if (_model.Id != 0)
        {
            await DataManager.Recipients.UpdateAsync(_model, CancellationToken.None);
        }
        else
        {
            await DataManager.Recipients.CreateAsync(_model, CancellationToken.None);
        }
        
        Nav.NavigateTo("/recipients/list");
    }
}